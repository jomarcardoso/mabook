{
    "pipes": [],
    "interfaces": [
        {
            "name": "Banner",
            "id": "interface-Banner-0d071a6274acd1ab7af34924353de984",
            "file": "src/app/shared/services/banner/banner.constants.ts",
            "type": "interface",
            "sourceCode": "export interface Banner {\r\n  mobileUrl: string;\r\n  deskUrl: string;\r\n  alt: string;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const BANNER: Banner = {\r\n  alt: '',\r\n  description: '',\r\n  deskUrl: '',\r\n  mobileUrl: '',\r\n  title: '',\r\n};\r\n",
            "properties": [
                {
                    "name": "alt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "deskUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "mobileUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Img",
            "id": "interface-Img-310d216ae5be5897c608e21714acae6f",
            "file": "src/types.ts",
            "type": "interface",
            "sourceCode": "export interface Img {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nexport interface Post {\r\n  title: string;\r\n  imageUrl: Img;\r\n  content: string;\r\n  date: Date;\r\n  categories: string[];\r\n  stars: number;\r\n  votes: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "alt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Post",
            "id": "interface-Post-310d216ae5be5897c608e21714acae6f",
            "file": "src/types.ts",
            "type": "interface",
            "sourceCode": "export interface Img {\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nexport interface Post {\r\n  title: string;\r\n  imageUrl: Img;\r\n  content: string;\r\n  date: Date;\r\n  categories: string[];\r\n  stars: number;\r\n  votes: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "categories",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "content",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "date",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "imageUrl",
                    "type": "Img",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "stars",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "votes",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-23cdcb26574853a3c4a08cd777e25fb4",
            "file": "src/app/shared/services/user.ts",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  uid: string;\r\n  email: string;\r\n  displayName: string;\r\n  photoURL: string;\r\n  emailVerified: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "displayName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "emailVerified",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "photoURL",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "uid",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-b42c5d958130cb87137ddb4f63660bd4",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "afAuth",
                    "type": "AngularFireAuth",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "afs",
                    "type": "AngularFirestore",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngZone",
                    "type": "NgZone",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "router",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "userData",
                    "type": "fireBaseApp.User",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "AuthLogin",
                    "args": [
                        {
                            "name": "provider",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106,
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ForgotPassword",
                    "args": [
                        {
                            "name": "passwordResetEmail",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "jsdoctags": [
                        {
                            "name": "passwordResetEmail",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSavedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "fireBaseApp.User",
                    "typeParameters": [],
                    "line": 88,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "GoogleAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101
                },
                {
                    "name": "SendVerificationMail",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "SetUserData",
                    "args": [
                        {
                            "name": "user",
                            "type": "fireBaseApp.User"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "fireBaseApp.User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SignIn",
                    "args": [
                        {
                            "name": "email",
                            "type": ""
                        },
                        {
                            "name": "password",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SignOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 138
                },
                {
                    "name": "SignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": ""
                        },
                        {
                            "name": "password",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, NgZone } from '@angular/core';\r\nimport fireBaseApp from 'firebase/app';\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from '../user';\r\n\r\nconst { auth } = fireBaseApp;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  userData: fireBaseApp.User; // Save logged in user data\r\n\r\n  constructor(\r\n    public afs: AngularFirestore,   // Inject Firestore service\r\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\r\n    public router: Router,\r\n    public ngZone: NgZone // NgZone service to remove outside scope warning\r\n  ) {\r\n    if (this.isLoggedIn) {\r\n      this.userData = AuthService.getSavedUser();\r\n\r\n      return;\r\n    }\r\n\r\n    /* Saving user data in localstorage when\r\n    logged in and setting up null when logged out */\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        this.SetUserData(user);\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Sign in with email/password\r\n  SignIn(email, password) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['dashboard']);\r\n        });\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Sign up with email/password\r\n  SignUp(email, password) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        /* Call the SendVerificaitonMail() function when new user sign\r\n        up and returns promise */\r\n        this.SendVerificationMail();\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Send email verfificaiton when new user sign up\r\n  SendVerificationMail() {\r\n    return this.afAuth.currentUser\r\n    .then((currentUser) => {\r\n      currentUser.sendEmailVerification()\r\n      .then(() => {\r\n        this.router.navigate(['verify-email-address']);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Reset Forggot password\r\n  ForgotPassword(passwordResetEmail) {\r\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\r\n    .then(() => {\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  static getSavedUser(): fireBaseApp.User {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = AuthService.getSavedUser();\r\n\r\n    return Boolean(user || this.userData);\r\n    // return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Sign in with Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  // Auth logic to run auth providers\r\n  AuthLogin(provider) {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n      this.ngZone.run(() => {\r\n        this.router.navigate(['dashboard']);\r\n      });\r\n      this.SetUserData(result.user);\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  /* Setting up user data when sign in with username/password,\r\n  sign up with username/password and sign in with social auth\r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\r\n  SetUserData(user: fireBaseApp.User) {\r\n    console.log('vai salvar');\r\n\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }\r\n\r\n  // Sign out\r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.userData = null;\r\n      this.router.navigate(['sign-in']);\r\n    })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore"
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isLoggedIn": {
                    "name": "isLoggedIn",
                    "getSignature": {
                        "name": "isLoggedIn",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 93
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e3ea1f4631d62652a5623d3ab757b2fc",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccountPageComponent",
            "id": "component-AccountPageComponent-dae7775a4daacdbdbd85978374471ddd",
            "file": "src/app/account-page/account-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-account-page",
            "styleUrls": [
                "./account-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./account-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngZone",
                    "type": "NgZone",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "router",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { AuthService } from '../shared/services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-page',\r\n  templateUrl: './account-page.component.html',\r\n  styleUrls: ['./account-page.component.css']\r\n})\r\nexport class AccountPageComponent implements OnInit {\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    public ngZone: NgZone,\r\n    // private afAuth: AngularFireAuth,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.afAuth.authState.subscribe(d => console.log(d));\r\n  }\r\n\r\n  logout() {\r\n    // this.afAuth.signOut();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./account-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n  <div class=\"inner-adjust\">\r\n\r\n    <div class=\"pt-3 pb-2 mb-3 border-bottom\">\r\n      <h1 class=\"h2\">User Profile</h1>\r\n    </div>\r\n    <!-- Show user data when logged in -->\r\n    <div class=\"row\" *ngIf=\"authService.userData as user\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"media\">\r\n          <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\r\n            alt=\"{{user.displayName}}\">\r\n          <div class=\"media-body\">\r\n            <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\r\n            <p>User ID: <strong>{{user.uid}}</strong></p>\r\n            <p>Email: <strong>{{user.email}}</strong></p>\r\n            <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</main>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-53fcc6e59695e15c95b8bd583a2fe1a3",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Mabook'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Mabook';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n"
        },
        {
            "name": "BannerFormComponent",
            "id": "component-BannerFormComponent-d67b72e5e2b4cf9441f6c2462c447cf7",
            "file": "src/app/banner-form/banner-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner-form",
            "styleUrls": [
                "./banner-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./banner-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bannerForm",
                    "defaultValue": "this.formBuilder.group(BANNER)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BANNER } from '../shared/services/banner/banner.constants';\r\n\r\n@Component({\r\n  selector: 'app-banner-form',\r\n  templateUrl: './banner-form.component.html',\r\n  styleUrls: ['./banner-form.component.css']\r\n})\r\nexport class BannerFormComponent implements OnInit {\r\n  bannerForm = this.formBuilder.group(BANNER);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log(this.bannerForm.value);\r\n    this.bannerForm.reset();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./banner-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"bannerForm\" (ngSubmit)=\"onSubmit()\">\r\n  <app-modal [title]=\"'Cadastrar novo banner'\">\r\n\r\n    <div class=\"mb 3\">\r\n      <label for=\"\" class=\"form-label\">Título</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"title\">\r\n    </div>\r\n    <div class=\"mb 3\">\r\n      <label for=\"\" class=\"form-label\">Descrição</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"description\">\r\n    </div>\r\n    <div class=\"mb 3\">\r\n      <label for=\"\" class=\"form-label\">Imagem para computador</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"deskUrl\">\r\n    </div>\r\n    <div class=\"mb 3\">\r\n      <label for=\"\" class=\"form-label\">Imagem para celular</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"mobileUrl\">\r\n    </div>\r\n    <div class=\"mb 3\">\r\n      <label for=\"\" class=\"form-label\">Texto alternativo</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"alt\">\r\n    </div>\r\n  </app-modal>\r\n</form>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-475edeb8c14255fb2e7da3e44fcd83bb",
            "file": "src/app/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "line": 12,
                    "type": "color"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\ntype color = 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'link';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n  @Input()\n  color: color = 'primary';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"btn btn-{{ color }}\">botão</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-4ea70f6f0bb5d721311880801456791a",
            "file": "src/app/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "post",
                    "line": 11,
                    "type": "Post"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { AuthService } from '../shared/services/auth/auth.service';\r\nimport { Post } from '../../types';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() post: Post;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<article class=\"card\">\r\n  <img [src]=\"post.imageUrl\" class=\"card-img-top\">\r\n  <div class=\"card-body\">\r\n    <app-star-rating class=\"mb-1\" *ngIf=\"authService.isLoggedIn\" [stars]=\"post.stars\">\r\n    </app-star-rating>\r\n    <h5 class=\"card-title\">{{ post.title }}</h5>\r\n  </div>\r\n</article>\r\n"
        },
        {
            "name": "CarouselBannerComponent",
            "id": "component-CarouselBannerComponent-7ca55a185381075365002e7559bb3a4b",
            "file": "src/app/carousel-banner/carousel-banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-carousel-banner",
            "styleUrls": [
                "./carousel-banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./carousel-banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "openedCreateModal",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "slideCollection",
                    "type": "AngularFirestoreCollection<Banner>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "slides",
                    "type": "Observable<Banner[]>",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "openCreateModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../shared/services/auth/auth.service';\r\nimport { Banner } from '../shared/services/banner/banner.constants';\r\n\r\n@Component({\r\n  selector: 'app-carousel-banner',\r\n  templateUrl: './carousel-banner.component.html',\r\n  styleUrls: ['./carousel-banner.component.scss']\r\n})\r\nexport class CarouselBannerComponent implements OnInit {\r\n  private slideCollection: AngularFirestoreCollection<Banner>;\r\n  slides: Observable<Banner[]>;\r\n  openedCreateModal = false;\r\n\r\n  constructor(afs: AngularFirestore, public authService: AuthService) {\r\n    this.slideCollection = afs.collection<Banner>('banner');\r\n    this.slides = this.slideCollection.valueChanges();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openCreateModal() {\r\n    this.openedCreateModal = true;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/utilities/utilities';\r\n\r\n.carousel-banner {\r\n  &__picture {\r\n    display: block;\r\n    padding-bottom: calc(100% / 3 * 2);\r\n  }\r\n\r\n  &__img {\r\n    object-fit: cover;\r\n    height: 100%;\r\n  }\r\n\r\n  @include media-breakpoint-up(md) {\r\n    &__picture {\r\n      padding-bottom: calc(40%);\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./carousel-banner.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore"
                    },
                    {
                        "name": "authService",
                        "type": "AuthService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"carousel-banner bg-light\">\r\n  <div class=\"container-xxl px-0\">\r\n    <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\r\n      <ol class=\"carousel-indicators\">\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n      </ol>\r\n      <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\" *ngFor=\"let slide of (slides | async)\">\r\n          ​<picture class=\"carousel-banner__picture position-relative\">\r\n            <source srcset={{slide.deskUrl}} media=\"(min-width: 960px)\">\r\n            <img srcset={{slide.mobileUrl}} class=\"d-block w-100 img-fluid carousel-banner__img position-absolute h-100 bg-dark\" alt={{slide.alt}}>\r\n          </picture>\r\n          <div class=\"carousel-caption d-none d-md-block\">\r\n            <h5>{{slide.title}}</h5>\r\n            <p>{{slide.description}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"carousel-item active\" *ngIf=\"authService.isLoggedIn\">\r\n          <div class=\"carousel-banner__picture position-relative\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n              <a href=\"#\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\r\n                <h5 class=\"text-dark\">adicionar banner</h5>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Previous</span>\r\n      </a>\r\n      <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Next</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-banner-form></app-banner-form>\r\n"
        },
        {
            "name": "FeedComponent",
            "id": "component-FeedComponent-c78948b0074bc45e84ea42943b2c4e8f",
            "file": "src/app/feed/feed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feed",
            "styleUrls": [
                "./feed.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./feed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "postCollection",
                    "type": "AngularFirestoreCollection<Post>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "posts",
                    "type": "Observable<Post[]>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'Novidades da semana'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Post } from '../../types';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.css']\r\n})\r\nexport class FeedComponent implements OnInit {\r\n  private postCollection: AngularFirestoreCollection<Post>;\r\n  posts: Observable<Post[]>;\r\n  title = 'Novidades da semana';\r\n\r\n  constructor(afs: AngularFirestore) {\r\n    this.postCollection = afs.collection<Post>('news');\r\n    this.posts = this.postCollection.valueChanges();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./feed.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"feed\">\r\n  <div class=\"container-xxl\">\r\n    <h2 class=\"mb-3\">{{title}}</h2>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-sm-6 col-md-4\" *ngFor=\"let post of (posts | async)\">\r\n        <app-card [post]=\"post\"></app-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-7db4e791597b41b1fde867cf7fe64fc9",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Footer -->\r\n<footer class=\"text-center text-lg-start bg-light text-muted mt-5\">\r\n  <!-- Section: Social media -->\r\n  <section\r\n    class=\"d-flex justify-content-center justify-content-lg-between p-4 border-bottom\"\r\n  >\r\n    <!-- Left -->\r\n    <div class=\"me-5 d-none d-lg-block\">\r\n      <span>Get connected with us on social networks:</span>\r\n    </div>\r\n    <!-- Left -->\r\n\r\n    <!-- Right -->\r\n    <div>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-facebook\"></i>\r\n      </a>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-twitter\"></i>\r\n      </a>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-google\"></i>\r\n      </a>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-instagram\"></i>\r\n      </a>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-linkedin\"></i>\r\n      </a>\r\n      <a href=\"\" class=\"me-4 text-reset\">\r\n        <i class=\"bi bi-github\"></i>\r\n      </a>\r\n    </div>\r\n    <!-- Right -->\r\n  </section>\r\n  <!-- Section: Social media -->\r\n\r\n  <!-- Section: Links  -->\r\n  <section class=\"\">\r\n    <div class=\"container text-center text-md-start mt-5\">\r\n      <!-- Grid row -->\r\n      <div class=\"row mt-3\">\r\n        <!-- Grid column -->\r\n        <div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\r\n          <!-- Content -->\r\n          <h6 class=\"text-uppercase fw-bold mb-4\">\r\n            <i class=\"bi bi-gem me-3\"></i>Mabook\r\n          </h6>\r\n          <p>\r\n            Here you can use rows and columns to organize your footer content. Lorem ipsum\r\n            dolor sit amet, consectetur adipisicing elit.\r\n          </p>\r\n        </div>\r\n        <!-- Grid column -->\r\n\r\n        <!-- Grid column -->\r\n        <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n          <!-- Links -->\r\n          <h6 class=\"text-uppercase fw-bold mb-4\">\r\n            Products\r\n          </h6>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Angular</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">React</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Vue</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Laravel</a>\r\n          </p>\r\n        </div>\r\n        <!-- Grid column -->\r\n\r\n        <!-- Grid column -->\r\n        <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n          <!-- Links -->\r\n          <h6 class=\"text-uppercase fw-bold mb-4\">\r\n            Useful links\r\n          </h6>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Pricing</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Settings</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Orders</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"#!\" class=\"text-reset\">Help</a>\r\n          </p>\r\n        </div>\r\n        <!-- Grid column -->\r\n\r\n        <!-- Grid column -->\r\n        <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\r\n          <!-- Links -->\r\n          <h6 class=\"text-uppercase fw-bold mb-4\">\r\n            Contact\r\n          </h6>\r\n          <p><i class=\"bi bi-house-fill me-3\"></i> New York, NY 10012, US</p>\r\n          <p>\r\n            <i class=\"bi bi-envelope-fill me-3\"></i>\r\n            info@example.com\r\n          </p>\r\n          <p><i class=\"bi bi-phone-fill me-3\"></i> + 01 234 567 88</p>\r\n          <p><i class=\"bi bi-telephone-fill me-3\"></i> + 01 234 567 89</p>\r\n        </div>\r\n        <!-- Grid column -->\r\n      </div>\r\n      <!-- Grid row -->\r\n    </div>\r\n  </section>\r\n  <!-- Section: Links  -->\r\n\r\n  <!-- Copyright -->\r\n  <div class=\"text-center p-4\" style=\"background-color: rgba(0, 0, 0, 0.05);\">\r\n    © 2021 Copyright:\r\n    <a class=\"text-reset fw-bold\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a>\r\n  </div>\r\n  <!-- Copyright -->\r\n</footer>\r\n<!-- Footer -->\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-830833a8679dea7efa9e3259e02136e1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "genders",
                    "defaultValue": "['Vampiros', 'Ficção', 'Aventura']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "'Mabook'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Header padrão para todas as páginas mobile e desktop</p>\n",
            "rawdescription": "Header padrão para todas as páginas mobile e desktop",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../shared/services/auth/auth.service';\r\n\r\n/**\r\n * Header padrão para todas as páginas mobile e desktop\r\n *\r\n * @example\r\n * <app-header></app-header>\r\n *\r\n * @example\r\n * <div>oi</div>\r\n */\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  title = 'Mabook';\r\n  genders = ['Vampiros', 'Ficção', 'Aventura']\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "jsdoctags": [
                {
                    "pos": 192,
                    "end": 203,
                    "flags": 0,
                    "kind": 288,
                    "atToken": {
                        "pos": 192,
                        "end": 193,
                        "flags": 0,
                        "kind": 57
                    },
                    "tagName": {
                        "pos": 193,
                        "end": 200,
                        "flags": 0,
                        "escapedText": "example"
                    },
                    "comment": "<app-header></app-header>"
                },
                {
                    "pos": 239,
                    "end": 250,
                    "flags": 0,
                    "kind": 288,
                    "atToken": {
                        "pos": 239,
                        "end": 240,
                        "flags": 0,
                        "kind": 57
                    },
                    "tagName": {
                        "pos": 240,
                        "end": 247,
                        "flags": 0,
                        "escapedText": "example"
                    },
                    "comment": "<div>oi</div>"
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "readme": "<h1 id=\"header\">Header</h1>\n<p>Somente um teste.</p>\n",
            "templateData": "<nav class=\"\">\r\n  <div class=\"navbar navbar-expand-lg navbar-light border-bottom\">\r\n    <div class=\"container-xxl\">\r\n      <a class=\"navbar-brand\" href=\"#\" [routerLink]=\"['/']\">{{ title }}</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mb-2 mb-lg-0\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Autores</a>\r\n          </li>\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Melhores livros\r\n            </a>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <li><a class=\"dropdown-item\" href=\"#\">Todos os gêneros</a></li>\r\n              <li><hr class=\"dropdown-divider\"></li>\r\n\r\n              <li><a *ngFor=\"let gender of genders\" class=\"dropdown-item\" href=\"#\">{{ gender }}</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <div class=\"me-auto ms-auto d-none d-lg-block\">\r\n          <app-search></app-search>\r\n        </div>\r\n        <a *ngIf=\"!authService.isLoggedIn\" href=\"#\" [routerLink]=\"['/login']\" class=\"d-flex align-items-center text-decoration-none\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <strong class=\"me-2\">{{'login'}}</strong>\r\n          <img src=\"{{'/assets/imgs/dummy-user.png'}}\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\">\r\n        </a>\r\n        <div class=\"d-none d-lg-block\">\r\n          <div class=\"dropdown\" *ngIf=\"authService.userData as user\">\r\n            <a href=\"#\" class=\"d-flex align-items-center text-decoration-none\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              <strong class=\"dropdown-toggle me-2\">{{(user.displayName) ? user.displayName : 'User'}}</strong>\r\n              <img src=\"{{(user.photoURL) ? user.photoURL : '/assets/imgs/dummy-user.png'}}\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\">\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\" aria-labelledby=\"dropdownUser1\">\r\n              <li><a class=\"dropdown-item\" href=\"#\" [routerLink]=\"['/account']\">Minha conta</a></li>\r\n              <li><hr class=\"dropdown-divider\"></li>\r\n              <li><a class=\"dropdown-item\" href=\"#\" (click)=\"authService.SignOut()\">Sair</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <ul class=\"d-block d-lg-none navbar-nav\" *ngIf=\"authService.userData as user\">\r\n          <li class=\"nav-item\"><hr class=\"divider\"></li>\r\n          <li class=\"nav-item d-flex justify-content-between\">\r\n            <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/account']\">\r\n              <div class=\"d-flex align-items-center text-decoration-none me-2\">\r\n                <img src=\"{{(user.photoURL) ? user.photoURL : '/assets/imgs/dummy-user.png'}}\" alt=\"\" width=\"24\" height=\"24\" class=\"rounded-circle me-2\">\r\n                <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong>\r\n              </div>\r\n            </a>\r\n            <a class=\"nav-link\" href=\"#\" (click)=\"authService.SignOut()\">Sair</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-lg-none border-bottom py-2 shadow-sm\">\r\n    <div class=\"container-xxl\">\r\n      <app-search></app-search>\r\n    </div>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-4119aa96cab664aa11f7a6e3872662c7",
            "file": "src/app/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [
                "./home-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"mb-4\">\r\n  <app-carousel-banner></app-carousel-banner>\r\n</div>\r\n<app-feed></app-feed>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-36403a0e42d378440b21809172debae3",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "errorCallback",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInFailure"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInFailure",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "successCallback",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInSuccessWithAuthResult"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInSuccessWithAuthResult",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uiShownCallback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport {Router} from '@angular/router';\r\nimport { FirebaseUISignInFailure, FirebaseUISignInSuccessWithAuthResult } from 'firebaseui-angular';\r\nimport { AuthService } from '../shared/services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    public authService: AuthService,\r\n    private afAuth: AngularFireAuth,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.afAuth.authState.subscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.afAuth.signOut();\r\n  }\r\n\r\n  successCallback(data: FirebaseUISignInSuccessWithAuthResult) {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  errorCallback(data: FirebaseUISignInFailure) {\r\n    console.warn('errorCallback', data);\r\n  }\r\n\r\n  uiShownCallback() {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService"
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\r\n  <h2>Login</h2>\r\n  <firebase-ui\r\n    (signInSuccessWithAuthResult)=\"successCallback($event)\"\r\n    (signInFailure)=\"errorCallback($event)\"\r\n    (uiShown)=\"uiShownCallback()\"\r\n  >\r\n  </firebase-ui>\r\n</section>\r\n"
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-0afaa4296ed82f0b4defed21fe76bde4",
            "file": "src/app/login-page/login-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [
                "./login-page.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "errorCallback",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInFailure"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInFailure",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "successCallback",
                    "args": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInSuccessWithAuthResult"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FirebaseUISignInSuccessWithAuthResult",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uiShownCallback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport {\r\n  FirebaseUISignInFailure,\r\n  FirebaseUISignInSuccessWithAuthResult\r\n} from 'firebaseui-angular';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor(private afAuth: AngularFireAuth, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.afAuth.authState.subscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.afAuth.signOut();\r\n  }\r\n\r\n  successCallback(data: FirebaseUISignInSuccessWithAuthResult) {\r\n    this.router.navigate(['page']);\r\n  }\r\n\r\n  errorCallback(data: FirebaseUISignInFailure) {\r\n    console.warn('errorCallback', data);\r\n  }\r\n\r\n  uiShownCallback() {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login-page.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <app-header></app-header> -->\r\n<app-login></app-login>\r\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-845b17c93aa0ceacfb66ad4b390ad336",
            "file": "src/app/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [
                "./modal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "line": 9
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  @Input() opened = false;\r\n  @Input() title = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Modal -->\r\n<div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{{title}}</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">cancelar</button>\r\n        <button type=\"submit\" class=\"btn btn-primary\">enviar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-e5477cd54eabd2d419781aaf2d2edd8b",
            "file": "src/app/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"d-flex me-auto ms-auto\">\r\n  <div class=\"input-group\">\r\n    <input class=\"form-control\" type=\"search\" placeholder=\"livro, autor, gênero\" aria-label=\"buscar\">\r\n    <button class=\"btn btn-primary\" type=\"submit\"><i class=\"bi bi-search\" aria-label=\"enviar busca\"></i></button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "StarRatingComponent",
            "id": "component-StarRatingComponent-6f409354e1433ba2085dbcf07cffedcc",
            "file": "src/app/star-rating/star-rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-star-rating",
            "styleUrls": [
                "./star-rating.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./star-rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "stars",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  styleUrls: ['./star-rating.component.css']\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n  @Input() stars: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./star-rating.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <i class=\"bi me-1\" [ngClass]=\"stars > 0.5 ? 'bi-star-fill' : 'bi-star'\"></i>\r\n  <i class=\"bi me-1\" [ngClass]=\"stars > 1.5 ? 'bi-star-fill' : 'bi-star'\"></i>\r\n  <i class=\"bi me-1\" [ngClass]=\"stars > 2.5 ? 'bi-star-fill' : 'bi-star'\"></i>\r\n  <i class=\"bi me-1\" [ngClass]=\"stars > 3.5 ? 'bi-star-fill' : 'bi-star'\"></i>\r\n  <i class=\"bi me-1\" [ngClass]=\"stars > 4.5 ? 'bi-star-fill' : 'bi-star'\"></i>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountPageComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BannerFormComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CarouselBannerComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LoginPageComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "StarRatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "BANNER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/banner/banner.constants.ts",
                "type": "Banner",
                "defaultValue": "{\r\n  alt: '',\r\n  description: '',\r\n  deskUrl: '',\r\n  mobileUrl: '',\r\n  title: '',\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Footer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "firebaseConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "FirebaseOptions",
                "defaultValue": "{\r\n  apiKey: 'AIzaSyAdDSsuHjbcVR9TRWTN4ILVyrt94aPez_8',\r\n  authDomain: 'mabook-d8a92.firebaseapp.com',\r\n  projectId: 'mabook-d8a92',\r\n  storageBucket: 'mabook-d8a92.appspot.com',\r\n  messagingSenderId: '521851974766',\r\n  appId: '1:521851974766:web:6aad1b7afba9df8583a27f',\r\n  measurementId: 'G-JTT7726GWE',\r\n  // https://mabook-d8a92.firebaseapp.com/__/auth/handler\r\n}"
            },
            {
                "name": "firebaseUiAuthConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "firebaseui.auth.Config",
                "defaultValue": "{\r\n  signInFlow: 'popup',\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    {\r\n      scopes: [\r\n        'public_profile',\r\n        'email',\r\n        'user_likes',\r\n        'user_friends'\r\n      ],\r\n      customParameters: {\r\n        'auth_type': 'reauthenticate'\r\n      },\r\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n    },\r\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    {\r\n      requireDisplayName: false,\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    },\r\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n    firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\r\n  ],\r\n  tosUrl: '<your-tos-link>',\r\n  privacyPolicyUrl: '<your-privacyPolicyUrl-link>',\r\n  credentialHelper: firebaseui.auth.CredentialHelper.GOOGLE_YOLO\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "post",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "type": "Post",
                "defaultValue": "{\r\n  categories: [],\r\n  content: 'Corpo da notícia.',\r\n  date: new Date(),\r\n  imageUrl: {\r\n    alt: '',\r\n    src: 'https://diariodonordeste.verdesmares.com.br/image/contentid/policy:1.2986962:1599737161/Shakira.jpg?f=16x9&h=720&q=0.8&w=1280&$p$f$h$q$w=aefd084',\r\n  },\r\n  stars: 1,\r\n  title: 'Título',\r\n  votes: 2,\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule],\r\n      providers: [AuthService]\r\n    }),\r\n  ],\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Footer.stories.ts",
                "type": "Story<FooterComponent>",
                "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n  moduleMetadata: {\n    imports: [CommonModule],\n    declarations: [SearchComponent],\n    providers: [AuthService, AngularFirestore, AngularFireAuth, Router, NgZone],\n  }\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/auth/auth.service.ts",
                "type": "",
                "defaultValue": "fireBaseApp"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                "file": "src/app/button/button.component.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/services/banner/banner.constants.ts": [
                {
                    "name": "BANNER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/banner/banner.constants.ts",
                    "type": "Banner",
                    "defaultValue": "{\r\n  alt: '',\r\n  description: '',\r\n  deskUrl: '',\r\n  mobileUrl: '',\r\n  title: '',\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Footer.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Footer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Footer.stories.ts",
                    "type": "Story<FooterComponent>",
                    "defaultValue": "(args: FooterComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig,\r\n}"
                },
                {
                    "name": "firebaseConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "FirebaseOptions",
                    "defaultValue": "{\r\n  apiKey: 'AIzaSyAdDSsuHjbcVR9TRWTN4ILVyrt94aPez_8',\r\n  authDomain: 'mabook-d8a92.firebaseapp.com',\r\n  projectId: 'mabook-d8a92',\r\n  storageBucket: 'mabook-d8a92.appspot.com',\r\n  messagingSenderId: '521851974766',\r\n  appId: '1:521851974766:web:6aad1b7afba9df8583a27f',\r\n  measurementId: 'G-JTT7726GWE',\r\n  // https://mabook-d8a92.firebaseapp.com/__/auth/handler\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "firebaseUiAuthConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "firebaseui.auth.Config",
                    "defaultValue": "{\r\n  signInFlow: 'popup',\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    {\r\n      scopes: [\r\n        'public_profile',\r\n        'email',\r\n        'user_likes',\r\n        'user_friends'\r\n      ],\r\n      customParameters: {\r\n        'auth_type': 'reauthenticate'\r\n      },\r\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n    },\r\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    {\r\n      requireDisplayName: false,\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    },\r\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n    firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\r\n  ],\r\n  tosUrl: '<your-tos-link>',\r\n  privacyPolicyUrl: '<your-privacyPolicyUrl-link>',\r\n  credentialHelper: firebaseui.auth.CredentialHelper.GOOGLE_YOLO\r\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n  moduleMetadata: {\n    imports: [CommonModule],\n    declarations: [SearchComponent],\n    providers: [AuthService, AngularFirestore, AngularFireAuth, Router, NgZone],\n  }\n})"
                }
            ],
            "src/stories/Card.stories.ts": [
                {
                    "name": "post",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "type": "Post",
                    "defaultValue": "{\r\n  categories: [],\r\n  content: 'Corpo da notícia.',\r\n  date: new Date(),\r\n  imageUrl: {\r\n    alt: '',\r\n    src: 'https://diariodonordeste.verdesmares.com.br/image/contentid/policy:1.2986962:1599737161/Shakira.jpg?f=16x9&h=720&q=0.8&w=1280&$p$f$h$q$w=aefd084',\r\n  },\r\n  stars: 1,\r\n  title: 'Título',\r\n  votes: 2,\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule],\r\n      providers: [AuthService]\r\n    }),\r\n  ],\r\n})"
                }
            ],
            "src/app/shared/services/auth/auth.service.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/auth/auth.service.ts",
                    "type": "",
                    "defaultValue": "fireBaseApp"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/button/button.component.ts": [
                {
                    "name": "color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                    "file": "src/app/button/button.component.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "account",
                        "component": "AccountPageComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "login",
                        "component": "LoginPageComponent"
                    },
                    {
                        "path": "",
                        "component": "HomePageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/account-page/account-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseUiAuthConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/banner-form/banner-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/carousel-banner/carousel-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarouselBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/login-page/login-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guard/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/banner/banner.constants.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Banner",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/banner/banner.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BANNER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/star-rating/star-rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StarRatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "post",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Img",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Post",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            }
        ]
    }
}